/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: VistaPrime (https://sketchfab.com/VistaPrime)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/human-head-f46d952886ae4a8c8851341b810bba43
Title: Human Head
*/

import * as THREE from "three";
import { useGLTF, Edges } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";
import { useEffect, useRef } from "react";

type GLTFResult = GLTF & {
  nodes: {
    eye_low_L_Material002_0: THREE.Mesh;
    eye_low_L001_Material002_0: THREE.Mesh;
    man_body_0014_uv_map_Material004_0: THREE.Mesh;
  };
  materials: {
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
  };
};

export function HumanHead(props: JSX.IntrinsicElements["group"]) {
  const headRef = useRef<any>();
  const { nodes, materials } = useGLTF(
    "../src/assets/human_head.glb"
  ) as GLTFResult;
  useFrame(() => {
    headRef.current.rotation.y += 0.001;
  });

  useEffect(() => {
    headRef.current.traverse((child) => {
      if (!child.isMesh) return;
      child.material.wireframe = false;
    });
  }, []);

  return (
    <group {...props} dispose={null}>
      <group
        rotation={[-Math.PI / 2, 0.015, -0.593]}
        scale={13}
        position={[0, -21, 0]}
      >
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01} ref={headRef}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.eye_low_L_Material002_0.geometry}
            material={materials["Material.002"]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />

          <mesh
            castShadow
            receiveShadow
            geometry={nodes.eye_low_L001_Material002_0.geometry}
            material={materials["Material.002"]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.man_body_0014_uv_map_Material004_0.geometry}
            material={materials["Material.004"]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("../src/assets/human_head.glb");
